{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { LOGIN_SUCCESS, LOGIN_FAIL, USER_LOADED, AUTH_ERROR } from \"./types\";\nimport setAuthToken from \"../utils/setAuthToken\"; //Load User\n\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  const res = await axios.get(\"/api/auth\");\n  console.log(res);\n\n  try {\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR,\n      payload: res.data\n    });\n  }\n}; //Login User\n\nexport const login = ({\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  console.log(email);\n  console.log(password);\n  const body = JSON.stringify({\n    email,\n    password\n  });\n  console.log(body);\n\n  try {\n    const res = await axios.post(\"/api/auth\", body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["C:\\repos\\Transport\\client\\src\\action\\auth.js"],"names":["axios","setAlert","LOGIN_SUCCESS","LOGIN_FAIL","USER_LOADED","AUTH_ERROR","setAuthToken","loadUser","dispatch","localStorage","token","res","get","console","log","type","payload","data","err","login","email","password","config","headers","body","JSON","stringify","post","errors","response","forEach","error","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SAASC,aAAT,EAAwBC,UAAxB,EAAoCC,WAApC,EAAiDC,UAAjD,QAAmE,SAAnE;AACA,OAAOC,YAAP,MAAyB,uBAAzB,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC9C,MAAIC,YAAY,CAACC,KAAjB,EAAwB;AACtBJ,IAAAA,YAAY,CAACG,YAAY,CAACC,KAAd,CAAZ;AACD;;AACD,QAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAU,WAAV,CAAlB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;;AACA,MAAI;AACFH,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAEX,WADC;AAEPY,MAAAA,OAAO,EAAEL,GAAG,CAACM;AAFN,KAAD,CAAR;AAID,GALD,CAKE,OAAOC,GAAP,EAAY;AACZV,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAEV,UADC;AAEPW,MAAAA,OAAO,EAAEL,GAAG,CAACM;AAFN,KAAD,CAAR;AAID;AACF,CAjBM,C,CAmBP;;AACA,OAAO,MAAME,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB,MAAMb,QAAN,IAAkB;AAC9D,QAAMc,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;AAKAV,EAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACAP,EAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;AACA,QAAMG,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEN,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAf,CAAb;AACAR,EAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ;;AACA,MAAI;AACF,UAAMb,GAAG,GAAG,MAAMX,KAAK,CAAC2B,IAAN,CAAW,WAAX,EAAwBH,IAAxB,EAA8BF,MAA9B,CAAlB;AACAd,IAAAA,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAEb,aAAR;AAAuBc,MAAAA,OAAO,EAAEL,GAAG,CAACM;AAApC,KAAD,CAAR;AACD,GAHD,CAGE,OAAOC,GAAP,EAAY;AACZ,UAAMU,MAAM,GAAGV,GAAG,CAACW,QAAJ,CAAaZ,IAAb,CAAkBW,MAAjC;;AACA,QAAIA,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAIvB,QAAQ,CAACP,QAAQ,CAAC8B,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAhC;AACD;;AAEDxB,IAAAA,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAEZ;AAAR,KAAD,CAAR;AACD;AACF,CArBM","sourcesContent":["import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport { LOGIN_SUCCESS, LOGIN_FAIL, USER_LOADED, AUTH_ERROR } from \"./types\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\n\r\n//Load User\r\nexport const loadUser = () => async dispatch => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n  const res = await axios.get(\"/api/auth\");\r\n  console.log(res);\r\n  try {\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n      payload: res.data\r\n    });\r\n  }\r\n};\r\n\r\n//Login User\r\nexport const login = ({ email, password }) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n  console.log(email);\r\n  console.log(password);\r\n  const body = JSON.stringify({ email, password });\r\n  console.log(body);\r\n  try {\r\n    const res = await axios.post(\"/api/auth\", body, config);\r\n    dispatch({ type: LOGIN_SUCCESS, payload: res.data });\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({ type: LOGIN_FAIL });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}