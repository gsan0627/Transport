{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\repos\\\\Transport\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\repos\\\\Transport\\\\client\\\\src\\\\components\\\\routing\\\\PrivateRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = (_ref) => {\n  let Component = _ref.component,\n      isAuthenticated = _ref.auth.isAuthenticated,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"auth\"]);\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => isAuthenticated == true ? React.createElement(Component, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    })) : React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }));\n};\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","map":{"version":3,"sources":["C:\\repos\\Transport\\client\\src\\components\\routing\\PrivateRoute.js"],"names":["React","Route","Redirect","connect","PropTypes","PrivateRoute","Component","component","isAuthenticated","auth","rest","props","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,YAAY,GAAG,UAIf;AAAA,MAHOC,SAGP,QAHJC,SAGI;AAAA,MAFIC,eAEJ,QAFJC,IAEI,CAFID,eAEJ;AAAA,MADDE,IACC;;AACJ,SACE,oBAAC,KAAD,oBACMA,IADN;AAEE,IAAA,MAAM,EAAEC,KAAK,IACXH,eAAe,IAAI,IAAnB,GACE,oBAAC,SAAD,oBAAeG,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,GAGE,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAYD,CAjBD;;AAmBAN,YAAY,CAACO,SAAb,GAAyB;AACvBH,EAAAA,IAAI,EAAEL,SAAS,CAACS,MAAV,CAAiBC;AADA,CAAzB;;AAIA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCP,EAAAA,IAAI,EAAEO,KAAK,CAACP;AADoB,CAAL,CAA7B;;AAIA,eAAeN,OAAO,CAACY,eAAD,CAAP,CAAyBV,YAAzB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  auth: { isAuthenticated },\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        isAuthenticated == true ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n"]},"metadata":{},"sourceType":"module"}